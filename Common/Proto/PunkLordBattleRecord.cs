// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PunkLordBattleRecord.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from PunkLordBattleRecord.proto</summary>
  public static partial class PunkLordBattleRecordReflection {

    #region Descriptor
    /// <summary>File descriptor for PunkLordBattleRecord.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PunkLordBattleRecordReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQdW5rTG9yZEJhdHRsZVJlY29yZC5wcm90bxoaUHVua0xvcmRCYXR0bGVB",
            "dmF0YXIucHJvdG8iywIKFFB1bmtMb3JkQmF0dGxlUmVjb3JkEhYKDlVpZEZp",
            "ZWxkTnVtYmVyGAEgASgNEhsKE0RhbWFnZUhwRmllbGROdW1iZXIYAiABKA0S",
            "HQoVSXNGaW5hbEhpdEZpZWxkTnVtYmVyGAMgASgIEiMKG092ZXJLaWxsRGFt",
            "YWdlSHBGaWVsZE51bWJlchgEIAEoDRIiChpCYXR0bGVSZXBsYXlLZXlGaWVs",
            "ZE51bWJlchgFIAEoCRI0ChVBdmF0YXJMaXN0RmllbGROdW1iZXIYBiADKAsy",
            "FS5QdW5rTG9yZEJhdHRsZUF2YXRhchIeChZBc3Npc3RTY29yZUZpZWxkTnVt",
            "YmVyGAcgASgNEh4KFkRhbWFnZVNjb3JlRmllbGROdW1iZXIYCCABKA0SIAoY",
            "RmluYWxIaXRTY29yZUZpZWxkTnVtYmVyGAkgASgNQh6qAhtFZ2dMaW5rLkRh",
            "bmhlbmdTZXJ2ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.PunkLordBattleAvatarReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.PunkLordBattleRecord), global::EggLink.DanhengServer.Proto.PunkLordBattleRecord.Parser, new[]{ "UidFieldNumber", "DamageHpFieldNumber", "IsFinalHitFieldNumber", "OverKillDamageHpFieldNumber", "BattleReplayKeyFieldNumber", "AvatarListFieldNumber", "AssistScoreFieldNumber", "DamageScoreFieldNumber", "FinalHitScoreFieldNumber" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PunkLordBattleRecord : pb::IMessage<PunkLordBattleRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PunkLordBattleRecord> _parser = new pb::MessageParser<PunkLordBattleRecord>(() => new PunkLordBattleRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PunkLordBattleRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.PunkLordBattleRecordReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PunkLordBattleRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PunkLordBattleRecord(PunkLordBattleRecord other) : this() {
      uidFieldNumber_ = other.uidFieldNumber_;
      damageHpFieldNumber_ = other.damageHpFieldNumber_;
      isFinalHitFieldNumber_ = other.isFinalHitFieldNumber_;
      overKillDamageHpFieldNumber_ = other.overKillDamageHpFieldNumber_;
      battleReplayKeyFieldNumber_ = other.battleReplayKeyFieldNumber_;
      avatarListFieldNumber_ = other.avatarListFieldNumber_.Clone();
      assistScoreFieldNumber_ = other.assistScoreFieldNumber_;
      damageScoreFieldNumber_ = other.damageScoreFieldNumber_;
      finalHitScoreFieldNumber_ = other.finalHitScoreFieldNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PunkLordBattleRecord Clone() {
      return new PunkLordBattleRecord(this);
    }

    /// <summary>Field number for the "UidFieldNumber" field.</summary>
    public const int UidFieldNumberFieldNumber = 1;
    private uint uidFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UidFieldNumber {
      get { return uidFieldNumber_; }
      set {
        uidFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "DamageHpFieldNumber" field.</summary>
    public const int DamageHpFieldNumberFieldNumber = 2;
    private uint damageHpFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DamageHpFieldNumber {
      get { return damageHpFieldNumber_; }
      set {
        damageHpFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "IsFinalHitFieldNumber" field.</summary>
    public const int IsFinalHitFieldNumberFieldNumber = 3;
    private bool isFinalHitFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinalHitFieldNumber {
      get { return isFinalHitFieldNumber_; }
      set {
        isFinalHitFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "OverKillDamageHpFieldNumber" field.</summary>
    public const int OverKillDamageHpFieldNumberFieldNumber = 4;
    private uint overKillDamageHpFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OverKillDamageHpFieldNumber {
      get { return overKillDamageHpFieldNumber_; }
      set {
        overKillDamageHpFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "BattleReplayKeyFieldNumber" field.</summary>
    public const int BattleReplayKeyFieldNumberFieldNumber = 5;
    private string battleReplayKeyFieldNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BattleReplayKeyFieldNumber {
      get { return battleReplayKeyFieldNumber_; }
      set {
        battleReplayKeyFieldNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AvatarListFieldNumber" field.</summary>
    public const int AvatarListFieldNumberFieldNumber = 6;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.PunkLordBattleAvatar> _repeated_avatarListFieldNumber_codec
        = pb::FieldCodec.ForMessage(50, global::EggLink.DanhengServer.Proto.PunkLordBattleAvatar.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.PunkLordBattleAvatar> avatarListFieldNumber_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.PunkLordBattleAvatar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.PunkLordBattleAvatar> AvatarListFieldNumber {
      get { return avatarListFieldNumber_; }
    }

    /// <summary>Field number for the "AssistScoreFieldNumber" field.</summary>
    public const int AssistScoreFieldNumberFieldNumber = 7;
    private uint assistScoreFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AssistScoreFieldNumber {
      get { return assistScoreFieldNumber_; }
      set {
        assistScoreFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "DamageScoreFieldNumber" field.</summary>
    public const int DamageScoreFieldNumberFieldNumber = 8;
    private uint damageScoreFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DamageScoreFieldNumber {
      get { return damageScoreFieldNumber_; }
      set {
        damageScoreFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "FinalHitScoreFieldNumber" field.</summary>
    public const int FinalHitScoreFieldNumberFieldNumber = 9;
    private uint finalHitScoreFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FinalHitScoreFieldNumber {
      get { return finalHitScoreFieldNumber_; }
      set {
        finalHitScoreFieldNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PunkLordBattleRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PunkLordBattleRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UidFieldNumber != other.UidFieldNumber) return false;
      if (DamageHpFieldNumber != other.DamageHpFieldNumber) return false;
      if (IsFinalHitFieldNumber != other.IsFinalHitFieldNumber) return false;
      if (OverKillDamageHpFieldNumber != other.OverKillDamageHpFieldNumber) return false;
      if (BattleReplayKeyFieldNumber != other.BattleReplayKeyFieldNumber) return false;
      if(!avatarListFieldNumber_.Equals(other.avatarListFieldNumber_)) return false;
      if (AssistScoreFieldNumber != other.AssistScoreFieldNumber) return false;
      if (DamageScoreFieldNumber != other.DamageScoreFieldNumber) return false;
      if (FinalHitScoreFieldNumber != other.FinalHitScoreFieldNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UidFieldNumber != 0) hash ^= UidFieldNumber.GetHashCode();
      if (DamageHpFieldNumber != 0) hash ^= DamageHpFieldNumber.GetHashCode();
      if (IsFinalHitFieldNumber != false) hash ^= IsFinalHitFieldNumber.GetHashCode();
      if (OverKillDamageHpFieldNumber != 0) hash ^= OverKillDamageHpFieldNumber.GetHashCode();
      if (BattleReplayKeyFieldNumber.Length != 0) hash ^= BattleReplayKeyFieldNumber.GetHashCode();
      hash ^= avatarListFieldNumber_.GetHashCode();
      if (AssistScoreFieldNumber != 0) hash ^= AssistScoreFieldNumber.GetHashCode();
      if (DamageScoreFieldNumber != 0) hash ^= DamageScoreFieldNumber.GetHashCode();
      if (FinalHitScoreFieldNumber != 0) hash ^= FinalHitScoreFieldNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UidFieldNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UidFieldNumber);
      }
      if (DamageHpFieldNumber != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DamageHpFieldNumber);
      }
      if (IsFinalHitFieldNumber != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsFinalHitFieldNumber);
      }
      if (OverKillDamageHpFieldNumber != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(OverKillDamageHpFieldNumber);
      }
      if (BattleReplayKeyFieldNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BattleReplayKeyFieldNumber);
      }
      avatarListFieldNumber_.WriteTo(output, _repeated_avatarListFieldNumber_codec);
      if (AssistScoreFieldNumber != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(AssistScoreFieldNumber);
      }
      if (DamageScoreFieldNumber != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(DamageScoreFieldNumber);
      }
      if (FinalHitScoreFieldNumber != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(FinalHitScoreFieldNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UidFieldNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UidFieldNumber);
      }
      if (DamageHpFieldNumber != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DamageHpFieldNumber);
      }
      if (IsFinalHitFieldNumber != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsFinalHitFieldNumber);
      }
      if (OverKillDamageHpFieldNumber != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(OverKillDamageHpFieldNumber);
      }
      if (BattleReplayKeyFieldNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BattleReplayKeyFieldNumber);
      }
      avatarListFieldNumber_.WriteTo(ref output, _repeated_avatarListFieldNumber_codec);
      if (AssistScoreFieldNumber != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(AssistScoreFieldNumber);
      }
      if (DamageScoreFieldNumber != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(DamageScoreFieldNumber);
      }
      if (FinalHitScoreFieldNumber != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(FinalHitScoreFieldNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UidFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UidFieldNumber);
      }
      if (DamageHpFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DamageHpFieldNumber);
      }
      if (IsFinalHitFieldNumber != false) {
        size += 1 + 1;
      }
      if (OverKillDamageHpFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OverKillDamageHpFieldNumber);
      }
      if (BattleReplayKeyFieldNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BattleReplayKeyFieldNumber);
      }
      size += avatarListFieldNumber_.CalculateSize(_repeated_avatarListFieldNumber_codec);
      if (AssistScoreFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssistScoreFieldNumber);
      }
      if (DamageScoreFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DamageScoreFieldNumber);
      }
      if (FinalHitScoreFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FinalHitScoreFieldNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PunkLordBattleRecord other) {
      if (other == null) {
        return;
      }
      if (other.UidFieldNumber != 0) {
        UidFieldNumber = other.UidFieldNumber;
      }
      if (other.DamageHpFieldNumber != 0) {
        DamageHpFieldNumber = other.DamageHpFieldNumber;
      }
      if (other.IsFinalHitFieldNumber != false) {
        IsFinalHitFieldNumber = other.IsFinalHitFieldNumber;
      }
      if (other.OverKillDamageHpFieldNumber != 0) {
        OverKillDamageHpFieldNumber = other.OverKillDamageHpFieldNumber;
      }
      if (other.BattleReplayKeyFieldNumber.Length != 0) {
        BattleReplayKeyFieldNumber = other.BattleReplayKeyFieldNumber;
      }
      avatarListFieldNumber_.Add(other.avatarListFieldNumber_);
      if (other.AssistScoreFieldNumber != 0) {
        AssistScoreFieldNumber = other.AssistScoreFieldNumber;
      }
      if (other.DamageScoreFieldNumber != 0) {
        DamageScoreFieldNumber = other.DamageScoreFieldNumber;
      }
      if (other.FinalHitScoreFieldNumber != 0) {
        FinalHitScoreFieldNumber = other.FinalHitScoreFieldNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UidFieldNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            DamageHpFieldNumber = input.ReadUInt32();
            break;
          }
          case 24: {
            IsFinalHitFieldNumber = input.ReadBool();
            break;
          }
          case 32: {
            OverKillDamageHpFieldNumber = input.ReadUInt32();
            break;
          }
          case 42: {
            BattleReplayKeyFieldNumber = input.ReadString();
            break;
          }
          case 50: {
            avatarListFieldNumber_.AddEntriesFrom(input, _repeated_avatarListFieldNumber_codec);
            break;
          }
          case 56: {
            AssistScoreFieldNumber = input.ReadUInt32();
            break;
          }
          case 64: {
            DamageScoreFieldNumber = input.ReadUInt32();
            break;
          }
          case 72: {
            FinalHitScoreFieldNumber = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UidFieldNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            DamageHpFieldNumber = input.ReadUInt32();
            break;
          }
          case 24: {
            IsFinalHitFieldNumber = input.ReadBool();
            break;
          }
          case 32: {
            OverKillDamageHpFieldNumber = input.ReadUInt32();
            break;
          }
          case 42: {
            BattleReplayKeyFieldNumber = input.ReadString();
            break;
          }
          case 50: {
            avatarListFieldNumber_.AddEntriesFrom(ref input, _repeated_avatarListFieldNumber_codec);
            break;
          }
          case 56: {
            AssistScoreFieldNumber = input.ReadUInt32();
            break;
          }
          case 64: {
            DamageScoreFieldNumber = input.ReadUInt32();
            break;
          }
          case 72: {
            FinalHitScoreFieldNumber = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
