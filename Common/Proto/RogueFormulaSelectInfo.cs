// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RogueFormulaSelectInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from RogueFormulaSelectInfo.proto</summary>
  public static partial class RogueFormulaSelectInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for RogueFormulaSelectInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RogueFormulaSelectInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxSb2d1ZUZvcm11bGFTZWxlY3RJbmZvLnByb3RvGhJJdGVtQ29zdERhdGEu",
            "cHJvdG8i1AIKFlJvZ3VlRm9ybXVsYVNlbGVjdEluZm8SJwofUm9sbEZvcm11",
            "bGFGcmVlQ291bnRGaWVsZE51bWJlchgDIAEoDRIZChFIaW50SWRGaWVsZE51",
            "bWJlchgLIAEoDRIjChtSb2xsRm9ybXVsYUNvdW50RmllbGROdW1iZXIYBiAB",
            "KA0SGgoSQ2FuUm9sbEZpZWxkTnVtYmVyGAIgASgIEiYKHlNlbGVjdEZvcm11",
            "bGFJZExpc3RGaWVsZE51bWJlchgHIAMoDRI1Ch5Sb2xsRm9ybXVsYUNvc3RE",
            "YXRhRmllbGROdW1iZXIYDCABKAsyDS5JdGVtQ29zdERhdGESLgomSGFuZGJv",
            "b2tVbmxvY2tGb3JtdWxhSWRMaXN0RmllbGROdW1iZXIYDiADKA0SJgoeUm9s",
            "bEZvcm11bGFNYXhDb3VudEZpZWxkTnVtYmVyGAEgASgNQh6qAhtFZ2dMaW5r",
            "LkRhbmhlbmdTZXJ2ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ItemCostDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.RogueFormulaSelectInfo), global::EggLink.DanhengServer.Proto.RogueFormulaSelectInfo.Parser, new[]{ "RollFormulaFreeCountFieldNumber", "HintIdFieldNumber", "RollFormulaCountFieldNumber", "CanRollFieldNumber", "SelectFormulaIdListFieldNumber", "RollFormulaCostDataFieldNumber", "HandbookUnlockFormulaIdListFieldNumber", "RollFormulaMaxCountFieldNumber" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RogueFormulaSelectInfo : pb::IMessage<RogueFormulaSelectInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RogueFormulaSelectInfo> _parser = new pb::MessageParser<RogueFormulaSelectInfo>(() => new RogueFormulaSelectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RogueFormulaSelectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.RogueFormulaSelectInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueFormulaSelectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueFormulaSelectInfo(RogueFormulaSelectInfo other) : this() {
      rollFormulaFreeCountFieldNumber_ = other.rollFormulaFreeCountFieldNumber_;
      hintIdFieldNumber_ = other.hintIdFieldNumber_;
      rollFormulaCountFieldNumber_ = other.rollFormulaCountFieldNumber_;
      canRollFieldNumber_ = other.canRollFieldNumber_;
      selectFormulaIdListFieldNumber_ = other.selectFormulaIdListFieldNumber_.Clone();
      rollFormulaCostDataFieldNumber_ = other.rollFormulaCostDataFieldNumber_ != null ? other.rollFormulaCostDataFieldNumber_.Clone() : null;
      handbookUnlockFormulaIdListFieldNumber_ = other.handbookUnlockFormulaIdListFieldNumber_.Clone();
      rollFormulaMaxCountFieldNumber_ = other.rollFormulaMaxCountFieldNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RogueFormulaSelectInfo Clone() {
      return new RogueFormulaSelectInfo(this);
    }

    /// <summary>Field number for the "RollFormulaFreeCountFieldNumber" field.</summary>
    public const int RollFormulaFreeCountFieldNumberFieldNumber = 3;
    private uint rollFormulaFreeCountFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RollFormulaFreeCountFieldNumber {
      get { return rollFormulaFreeCountFieldNumber_; }
      set {
        rollFormulaFreeCountFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "HintIdFieldNumber" field.</summary>
    public const int HintIdFieldNumberFieldNumber = 11;
    private uint hintIdFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HintIdFieldNumber {
      get { return hintIdFieldNumber_; }
      set {
        hintIdFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "RollFormulaCountFieldNumber" field.</summary>
    public const int RollFormulaCountFieldNumberFieldNumber = 6;
    private uint rollFormulaCountFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RollFormulaCountFieldNumber {
      get { return rollFormulaCountFieldNumber_; }
      set {
        rollFormulaCountFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "CanRollFieldNumber" field.</summary>
    public const int CanRollFieldNumberFieldNumber = 2;
    private bool canRollFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanRollFieldNumber {
      get { return canRollFieldNumber_; }
      set {
        canRollFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "SelectFormulaIdListFieldNumber" field.</summary>
    public const int SelectFormulaIdListFieldNumberFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_selectFormulaIdListFieldNumber_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> selectFormulaIdListFieldNumber_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SelectFormulaIdListFieldNumber {
      get { return selectFormulaIdListFieldNumber_; }
    }

    /// <summary>Field number for the "RollFormulaCostDataFieldNumber" field.</summary>
    public const int RollFormulaCostDataFieldNumberFieldNumber = 12;
    private global::EggLink.DanhengServer.Proto.ItemCostData rollFormulaCostDataFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ItemCostData RollFormulaCostDataFieldNumber {
      get { return rollFormulaCostDataFieldNumber_; }
      set {
        rollFormulaCostDataFieldNumber_ = value;
      }
    }

    /// <summary>Field number for the "HandbookUnlockFormulaIdListFieldNumber" field.</summary>
    public const int HandbookUnlockFormulaIdListFieldNumberFieldNumber = 14;
    private static readonly pb::FieldCodec<uint> _repeated_handbookUnlockFormulaIdListFieldNumber_codec
        = pb::FieldCodec.ForUInt32(114);
    private readonly pbc::RepeatedField<uint> handbookUnlockFormulaIdListFieldNumber_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> HandbookUnlockFormulaIdListFieldNumber {
      get { return handbookUnlockFormulaIdListFieldNumber_; }
    }

    /// <summary>Field number for the "RollFormulaMaxCountFieldNumber" field.</summary>
    public const int RollFormulaMaxCountFieldNumberFieldNumber = 1;
    private uint rollFormulaMaxCountFieldNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RollFormulaMaxCountFieldNumber {
      get { return rollFormulaMaxCountFieldNumber_; }
      set {
        rollFormulaMaxCountFieldNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RogueFormulaSelectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RogueFormulaSelectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RollFormulaFreeCountFieldNumber != other.RollFormulaFreeCountFieldNumber) return false;
      if (HintIdFieldNumber != other.HintIdFieldNumber) return false;
      if (RollFormulaCountFieldNumber != other.RollFormulaCountFieldNumber) return false;
      if (CanRollFieldNumber != other.CanRollFieldNumber) return false;
      if(!selectFormulaIdListFieldNumber_.Equals(other.selectFormulaIdListFieldNumber_)) return false;
      if (!object.Equals(RollFormulaCostDataFieldNumber, other.RollFormulaCostDataFieldNumber)) return false;
      if(!handbookUnlockFormulaIdListFieldNumber_.Equals(other.handbookUnlockFormulaIdListFieldNumber_)) return false;
      if (RollFormulaMaxCountFieldNumber != other.RollFormulaMaxCountFieldNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RollFormulaFreeCountFieldNumber != 0) hash ^= RollFormulaFreeCountFieldNumber.GetHashCode();
      if (HintIdFieldNumber != 0) hash ^= HintIdFieldNumber.GetHashCode();
      if (RollFormulaCountFieldNumber != 0) hash ^= RollFormulaCountFieldNumber.GetHashCode();
      if (CanRollFieldNumber != false) hash ^= CanRollFieldNumber.GetHashCode();
      hash ^= selectFormulaIdListFieldNumber_.GetHashCode();
      if (rollFormulaCostDataFieldNumber_ != null) hash ^= RollFormulaCostDataFieldNumber.GetHashCode();
      hash ^= handbookUnlockFormulaIdListFieldNumber_.GetHashCode();
      if (RollFormulaMaxCountFieldNumber != 0) hash ^= RollFormulaMaxCountFieldNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RollFormulaMaxCountFieldNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RollFormulaMaxCountFieldNumber);
      }
      if (CanRollFieldNumber != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanRollFieldNumber);
      }
      if (RollFormulaFreeCountFieldNumber != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RollFormulaFreeCountFieldNumber);
      }
      if (RollFormulaCountFieldNumber != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RollFormulaCountFieldNumber);
      }
      selectFormulaIdListFieldNumber_.WriteTo(output, _repeated_selectFormulaIdListFieldNumber_codec);
      if (HintIdFieldNumber != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(HintIdFieldNumber);
      }
      if (rollFormulaCostDataFieldNumber_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RollFormulaCostDataFieldNumber);
      }
      handbookUnlockFormulaIdListFieldNumber_.WriteTo(output, _repeated_handbookUnlockFormulaIdListFieldNumber_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RollFormulaMaxCountFieldNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RollFormulaMaxCountFieldNumber);
      }
      if (CanRollFieldNumber != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanRollFieldNumber);
      }
      if (RollFormulaFreeCountFieldNumber != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RollFormulaFreeCountFieldNumber);
      }
      if (RollFormulaCountFieldNumber != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RollFormulaCountFieldNumber);
      }
      selectFormulaIdListFieldNumber_.WriteTo(ref output, _repeated_selectFormulaIdListFieldNumber_codec);
      if (HintIdFieldNumber != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(HintIdFieldNumber);
      }
      if (rollFormulaCostDataFieldNumber_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RollFormulaCostDataFieldNumber);
      }
      handbookUnlockFormulaIdListFieldNumber_.WriteTo(ref output, _repeated_handbookUnlockFormulaIdListFieldNumber_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RollFormulaFreeCountFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RollFormulaFreeCountFieldNumber);
      }
      if (HintIdFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HintIdFieldNumber);
      }
      if (RollFormulaCountFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RollFormulaCountFieldNumber);
      }
      if (CanRollFieldNumber != false) {
        size += 1 + 1;
      }
      size += selectFormulaIdListFieldNumber_.CalculateSize(_repeated_selectFormulaIdListFieldNumber_codec);
      if (rollFormulaCostDataFieldNumber_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RollFormulaCostDataFieldNumber);
      }
      size += handbookUnlockFormulaIdListFieldNumber_.CalculateSize(_repeated_handbookUnlockFormulaIdListFieldNumber_codec);
      if (RollFormulaMaxCountFieldNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RollFormulaMaxCountFieldNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RogueFormulaSelectInfo other) {
      if (other == null) {
        return;
      }
      if (other.RollFormulaFreeCountFieldNumber != 0) {
        RollFormulaFreeCountFieldNumber = other.RollFormulaFreeCountFieldNumber;
      }
      if (other.HintIdFieldNumber != 0) {
        HintIdFieldNumber = other.HintIdFieldNumber;
      }
      if (other.RollFormulaCountFieldNumber != 0) {
        RollFormulaCountFieldNumber = other.RollFormulaCountFieldNumber;
      }
      if (other.CanRollFieldNumber != false) {
        CanRollFieldNumber = other.CanRollFieldNumber;
      }
      selectFormulaIdListFieldNumber_.Add(other.selectFormulaIdListFieldNumber_);
      if (other.rollFormulaCostDataFieldNumber_ != null) {
        if (rollFormulaCostDataFieldNumber_ == null) {
          RollFormulaCostDataFieldNumber = new global::EggLink.DanhengServer.Proto.ItemCostData();
        }
        RollFormulaCostDataFieldNumber.MergeFrom(other.RollFormulaCostDataFieldNumber);
      }
      handbookUnlockFormulaIdListFieldNumber_.Add(other.handbookUnlockFormulaIdListFieldNumber_);
      if (other.RollFormulaMaxCountFieldNumber != 0) {
        RollFormulaMaxCountFieldNumber = other.RollFormulaMaxCountFieldNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RollFormulaMaxCountFieldNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            CanRollFieldNumber = input.ReadBool();
            break;
          }
          case 24: {
            RollFormulaFreeCountFieldNumber = input.ReadUInt32();
            break;
          }
          case 48: {
            RollFormulaCountFieldNumber = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            selectFormulaIdListFieldNumber_.AddEntriesFrom(input, _repeated_selectFormulaIdListFieldNumber_codec);
            break;
          }
          case 88: {
            HintIdFieldNumber = input.ReadUInt32();
            break;
          }
          case 98: {
            if (rollFormulaCostDataFieldNumber_ == null) {
              RollFormulaCostDataFieldNumber = new global::EggLink.DanhengServer.Proto.ItemCostData();
            }
            input.ReadMessage(RollFormulaCostDataFieldNumber);
            break;
          }
          case 114:
          case 112: {
            handbookUnlockFormulaIdListFieldNumber_.AddEntriesFrom(input, _repeated_handbookUnlockFormulaIdListFieldNumber_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RollFormulaMaxCountFieldNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            CanRollFieldNumber = input.ReadBool();
            break;
          }
          case 24: {
            RollFormulaFreeCountFieldNumber = input.ReadUInt32();
            break;
          }
          case 48: {
            RollFormulaCountFieldNumber = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            selectFormulaIdListFieldNumber_.AddEntriesFrom(ref input, _repeated_selectFormulaIdListFieldNumber_codec);
            break;
          }
          case 88: {
            HintIdFieldNumber = input.ReadUInt32();
            break;
          }
          case 98: {
            if (rollFormulaCostDataFieldNumber_ == null) {
              RollFormulaCostDataFieldNumber = new global::EggLink.DanhengServer.Proto.ItemCostData();
            }
            input.ReadMessage(RollFormulaCostDataFieldNumber);
            break;
          }
          case 114:
          case 112: {
            handbookUnlockFormulaIdListFieldNumber_.AddEntriesFrom(ref input, _repeated_handbookUnlockFormulaIdListFieldNumber_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
