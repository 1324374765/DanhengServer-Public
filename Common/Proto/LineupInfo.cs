// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LineupInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from LineupInfo.proto</summary>
  public static partial class LineupInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for LineupInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LineupInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBMaW5ldXBJbmZvLnByb3RvGhVFeHRyYUxpbmV1cFR5cGUucHJvdG8aEkxp",
            "bmV1cEF2YXRhci5wcm90byKqAgoKTGluZXVwSW5mbxIiCgthdmF0YXJfbGlz",
            "dBgHIAMoCzINLkxpbmV1cEF2YXRhchIKCgJtcBgLIAEoDRISCgppc192aXJ0",
            "dWFsGAIgASgIEg0KBWluZGV4GA0gASgNEiYKHnN0b3J5X2xpbmVfYmFzZV9h",
            "dmF0YXJfaWRfbGlzdBgIIAMoDRIQCghwbGFuZV9pZBgDIAEoDRIMCgRuYW1l",
            "GAUgASgJEisKEWV4dHJhX2xpbmV1cF90eXBlGAogASgOMhAuRXh0cmFMaW5l",
            "dXBUeXBlEg4KBm1heF9tcBgJIAEoDRITCgtQT0tLRkJFTU1NQxgGIAEoCBIT",
            "CgtsZWFkZXJfc2xvdBgMIAEoDRIaChJnYW1lX3N0b3J5X2xpbmVfaWQYASAB",
            "KA1CHqoCG0VnZ0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ExtraLineupTypeReflection.Descriptor, global::EggLink.DanhengServer.Proto.LineupAvatarReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.LineupInfo), global::EggLink.DanhengServer.Proto.LineupInfo.Parser, new[]{ "AvatarList", "Mp", "IsVirtual", "Index", "StoryLineBaseAvatarIdList", "PlaneId", "Name", "ExtraLineupType", "MaxMp", "POKKFBEMMMC", "LeaderSlot", "GameStoryLineId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LineupInfo : pb::IMessage<LineupInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LineupInfo> _parser = new pb::MessageParser<LineupInfo>(() => new LineupInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LineupInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.LineupInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineupInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineupInfo(LineupInfo other) : this() {
      avatarList_ = other.avatarList_.Clone();
      mp_ = other.mp_;
      isVirtual_ = other.isVirtual_;
      index_ = other.index_;
      storyLineBaseAvatarIdList_ = other.storyLineBaseAvatarIdList_.Clone();
      planeId_ = other.planeId_;
      name_ = other.name_;
      extraLineupType_ = other.extraLineupType_;
      maxMp_ = other.maxMp_;
      pOKKFBEMMMC_ = other.pOKKFBEMMMC_;
      leaderSlot_ = other.leaderSlot_;
      gameStoryLineId_ = other.gameStoryLineId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineupInfo Clone() {
      return new LineupInfo(this);
    }

    /// <summary>Field number for the "avatar_list" field.</summary>
    public const int AvatarListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.LineupAvatar> _repeated_avatarList_codec
        = pb::FieldCodec.ForMessage(58, global::EggLink.DanhengServer.Proto.LineupAvatar.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.LineupAvatar> avatarList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.LineupAvatar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.LineupAvatar> AvatarList {
      get { return avatarList_; }
    }

    /// <summary>Field number for the "mp" field.</summary>
    public const int MpFieldNumber = 11;
    private uint mp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mp {
      get { return mp_; }
      set {
        mp_ = value;
      }
    }

    /// <summary>Field number for the "is_virtual" field.</summary>
    public const int IsVirtualFieldNumber = 2;
    private bool isVirtual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsVirtual {
      get { return isVirtual_; }
      set {
        isVirtual_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 13;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "story_line_base_avatar_id_list" field.</summary>
    public const int StoryLineBaseAvatarIdListFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_storyLineBaseAvatarIdList_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> storyLineBaseAvatarIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> StoryLineBaseAvatarIdList {
      get { return storyLineBaseAvatarIdList_; }
    }

    /// <summary>Field number for the "plane_id" field.</summary>
    public const int PlaneIdFieldNumber = 3;
    private uint planeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlaneId {
      get { return planeId_; }
      set {
        planeId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extra_lineup_type" field.</summary>
    public const int ExtraLineupTypeFieldNumber = 10;
    private global::EggLink.DanhengServer.Proto.ExtraLineupType extraLineupType_ = global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ExtraLineupType ExtraLineupType {
      get { return extraLineupType_; }
      set {
        extraLineupType_ = value;
      }
    }

    /// <summary>Field number for the "max_mp" field.</summary>
    public const int MaxMpFieldNumber = 9;
    private uint maxMp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxMp {
      get { return maxMp_; }
      set {
        maxMp_ = value;
      }
    }

    /// <summary>Field number for the "POKKFBEMMMC" field.</summary>
    public const int POKKFBEMMMCFieldNumber = 6;
    private bool pOKKFBEMMMC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool POKKFBEMMMC {
      get { return pOKKFBEMMMC_; }
      set {
        pOKKFBEMMMC_ = value;
      }
    }

    /// <summary>Field number for the "leader_slot" field.</summary>
    public const int LeaderSlotFieldNumber = 12;
    private uint leaderSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LeaderSlot {
      get { return leaderSlot_; }
      set {
        leaderSlot_ = value;
      }
    }

    /// <summary>Field number for the "game_story_line_id" field.</summary>
    public const int GameStoryLineIdFieldNumber = 1;
    private uint gameStoryLineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameStoryLineId {
      get { return gameStoryLineId_; }
      set {
        gameStoryLineId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LineupInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LineupInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!avatarList_.Equals(other.avatarList_)) return false;
      if (Mp != other.Mp) return false;
      if (IsVirtual != other.IsVirtual) return false;
      if (Index != other.Index) return false;
      if(!storyLineBaseAvatarIdList_.Equals(other.storyLineBaseAvatarIdList_)) return false;
      if (PlaneId != other.PlaneId) return false;
      if (Name != other.Name) return false;
      if (ExtraLineupType != other.ExtraLineupType) return false;
      if (MaxMp != other.MaxMp) return false;
      if (POKKFBEMMMC != other.POKKFBEMMMC) return false;
      if (LeaderSlot != other.LeaderSlot) return false;
      if (GameStoryLineId != other.GameStoryLineId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= avatarList_.GetHashCode();
      if (Mp != 0) hash ^= Mp.GetHashCode();
      if (IsVirtual != false) hash ^= IsVirtual.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      hash ^= storyLineBaseAvatarIdList_.GetHashCode();
      if (PlaneId != 0) hash ^= PlaneId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) hash ^= ExtraLineupType.GetHashCode();
      if (MaxMp != 0) hash ^= MaxMp.GetHashCode();
      if (POKKFBEMMMC != false) hash ^= POKKFBEMMMC.GetHashCode();
      if (LeaderSlot != 0) hash ^= LeaderSlot.GetHashCode();
      if (GameStoryLineId != 0) hash ^= GameStoryLineId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameStoryLineId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameStoryLineId);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsVirtual);
      }
      if (PlaneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PlaneId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (POKKFBEMMMC != false) {
        output.WriteRawTag(48);
        output.WriteBool(POKKFBEMMMC);
      }
      avatarList_.WriteTo(output, _repeated_avatarList_codec);
      storyLineBaseAvatarIdList_.WriteTo(output, _repeated_storyLineBaseAvatarIdList_codec);
      if (MaxMp != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MaxMp);
      }
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ExtraLineupType);
      }
      if (Mp != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Mp);
      }
      if (LeaderSlot != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(LeaderSlot);
      }
      if (Index != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameStoryLineId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameStoryLineId);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsVirtual);
      }
      if (PlaneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PlaneId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (POKKFBEMMMC != false) {
        output.WriteRawTag(48);
        output.WriteBool(POKKFBEMMMC);
      }
      avatarList_.WriteTo(ref output, _repeated_avatarList_codec);
      storyLineBaseAvatarIdList_.WriteTo(ref output, _repeated_storyLineBaseAvatarIdList_codec);
      if (MaxMp != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MaxMp);
      }
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ExtraLineupType);
      }
      if (Mp != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Mp);
      }
      if (LeaderSlot != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(LeaderSlot);
      }
      if (Index != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += avatarList_.CalculateSize(_repeated_avatarList_codec);
      if (Mp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mp);
      }
      if (IsVirtual != false) {
        size += 1 + 1;
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      size += storyLineBaseAvatarIdList_.CalculateSize(_repeated_storyLineBaseAvatarIdList_codec);
      if (PlaneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlaneId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExtraLineupType);
      }
      if (MaxMp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxMp);
      }
      if (POKKFBEMMMC != false) {
        size += 1 + 1;
      }
      if (LeaderSlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeaderSlot);
      }
      if (GameStoryLineId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameStoryLineId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LineupInfo other) {
      if (other == null) {
        return;
      }
      avatarList_.Add(other.avatarList_);
      if (other.Mp != 0) {
        Mp = other.Mp;
      }
      if (other.IsVirtual != false) {
        IsVirtual = other.IsVirtual;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      storyLineBaseAvatarIdList_.Add(other.storyLineBaseAvatarIdList_);
      if (other.PlaneId != 0) {
        PlaneId = other.PlaneId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ExtraLineupType != global::EggLink.DanhengServer.Proto.ExtraLineupType.LineupNone) {
        ExtraLineupType = other.ExtraLineupType;
      }
      if (other.MaxMp != 0) {
        MaxMp = other.MaxMp;
      }
      if (other.POKKFBEMMMC != false) {
        POKKFBEMMMC = other.POKKFBEMMMC;
      }
      if (other.LeaderSlot != 0) {
        LeaderSlot = other.LeaderSlot;
      }
      if (other.GameStoryLineId != 0) {
        GameStoryLineId = other.GameStoryLineId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameStoryLineId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 24: {
            PlaneId = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            POKKFBEMMMC = input.ReadBool();
            break;
          }
          case 58: {
            avatarList_.AddEntriesFrom(input, _repeated_avatarList_codec);
            break;
          }
          case 66:
          case 64: {
            storyLineBaseAvatarIdList_.AddEntriesFrom(input, _repeated_storyLineBaseAvatarIdList_codec);
            break;
          }
          case 72: {
            MaxMp = input.ReadUInt32();
            break;
          }
          case 80: {
            ExtraLineupType = (global::EggLink.DanhengServer.Proto.ExtraLineupType) input.ReadEnum();
            break;
          }
          case 88: {
            Mp = input.ReadUInt32();
            break;
          }
          case 96: {
            LeaderSlot = input.ReadUInt32();
            break;
          }
          case 104: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameStoryLineId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 24: {
            PlaneId = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            POKKFBEMMMC = input.ReadBool();
            break;
          }
          case 58: {
            avatarList_.AddEntriesFrom(ref input, _repeated_avatarList_codec);
            break;
          }
          case 66:
          case 64: {
            storyLineBaseAvatarIdList_.AddEntriesFrom(ref input, _repeated_storyLineBaseAvatarIdList_codec);
            break;
          }
          case 72: {
            MaxMp = input.ReadUInt32();
            break;
          }
          case 80: {
            ExtraLineupType = (global::EggLink.DanhengServer.Proto.ExtraLineupType) input.ReadEnum();
            break;
          }
          case 88: {
            Mp = input.ReadUInt32();
            break;
          }
          case 96: {
            LeaderSlot = input.ReadUInt32();
            break;
          }
          case 104: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
